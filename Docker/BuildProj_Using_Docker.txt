Step 1: create build of proj ----->  mvn clean install
Step 2: Create docker build of our Proj using cmd  same directory----> docker build . -f Dockerfile -t spring-boot-mysql-withdocker / docker build . -t imageName
Step 3: check image created or not ----------> docker images
Step 4: docker run --name mysql-standalone_5.6 -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=test -e MYSQL_USER=user -e MYSQL_PASSWORD=password -d mysql:5.6
Step 5: Run docker image ----------> docker run -p 8080:8080 spring-boot-mysql-withdocker  // docker run -p 8086:8086 --name spring-boot-mysql-withdocker --link mysql-standalone_5.6:mysql -d spring-boot-mysql-withdocker

===============================================
Angular:
	docker run -p 4200:4200 myapp
	http://192.168.99.100:4200/AngularCrud

Java API:	
	2) http://192.168.99.100:8086/api/getAll
	1) http://192.168.99.100:8086/api/createEmployee

========================================================
Create userName and Password---->  docker run --name mysql-standalone_5.6 -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=test -e MYSQL_USER=user -e MYSQL_PASSWORD=password -d mysql:5.6

If container is in use then :
	docker stop e0a90ecd1a8c6e78efd88a324b15668e85de9267409df1193b966a190202631a 
	docker rm e0a90ecd1a8c6e78efd88a324b15668e85de9267409df1193b966a190202631a


Link mysql to Spring boot App -----> docker run -p 8086:8086 --name spring-boot-mysql-withdocker --link mysql-standalone_5.6:mysql -d spring-boot-mysql-withdocker

docker image rm spring-boot-mysql

Remove Image:
	docker rmi ImageId
	 

=======================================	
Stop Container:
	Step 1: docker stop containerName/ImageName
	Step 2: docker rm imageName
	Step 3: docker image rm imageName
	Step 4: docker images
==================================================================	
Login To Mysql on docker:
	Step 1: docker exec -it mysql-standalone_5.6 /bin/bash
	Step 2: mysql -uuser -ppassword
	Step 3: show databases;
	Step 4: use databaseName
	Step 5: show tables;
Logout:
	Step 1: exit
	
	
Display running container:
		docker container ls
================================================	
Check Logs:
	MySql :	docker logs mysql-standalone_5.6
	Java  : 	docker logs spring-boot-mysql-withdocker 
	

======================================================================================================	
	docker stop mysql-standalone_5.6
	docker rm mysql-standalone_5.6
	
	docker run --name mysql-standalone_5.6 -e MYSQL_ROOT_PASSWORD=password -e MYSQL_DATABASE=test -e MYSQL_USER=user -e MYSQL_PASSWORD=password -d mysql:5.6
	mvn clean install
	docker build . -f Dockerfile -t spring-boot-mysql-withdocker
	docker run -p 8086:8086 --name spring-boot-mysql-withdocker --link mysql-standalone_5.6:mysql -d spring-boot-mysql-withdocker
=============================================================	
Angular Build on docker:
	Step 1: ng build
	Step 2: docker image build -t crudapp .
	Step 3: docker run -p 4200:4200 crudapp
	
=================================================================

create table employee(
   employee_id INT NOT NULL AUTO_INCREMENT,
   first_name VARCHAR(25) NOT NULL,
   last_name VARCHAR(25) NOT NULL,
   position VARCHAR(50) NOT NULL,
   emp_code VARCHAR(15) NOT NULL,
   office VARCHAR(255) NOT NULL,
  
   PRIMARY KEY ( employee_id )
);
======================================================
	
Use below videos:
	 1) https://www.youtube.com/watch?v=w_aVnMmrASE
	 2) https://www.youtube.com/watch?v=fvEWoy1xOvo